version: '3.3'

networks:
    desafio-network:
        driver: bridge

volumes:
    mongodb-data:
    mysql-data:

services:
    mongo-db-ats:
        image: mongo:4.0.20
        container_name: mongo-db-ats
        ports:
            - "27018:27017"
        expose:
            - "27017"
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: testE_1234x
        volumes:
            - mongodb-data:/data/db
        command: [--auth]
        restart: always
        networks:
            - desafio-network

    mysql-db-ats:
        image: mariadb:10.4
        container_name: mysql-db-ats
        ports:
            - "3307:3306"
        expose:
            - "3307"
        environment:
            - MYSQL_ROOT_PASSWORD=testE@123
        volumes:
            - ./init-script.sql:/docker-entrypoint-initdb.d/init-script.sql
            - mysql-data:/var/lib/mysql
        restart: always
        command: mysqld --default-authentication-plugin=mysql_native_password
        networks:
            - desafio-network

    desafio-ats-api:
        image: ${REGISTRY}/desafio-ats-api:${TAG}
        container_name: desafio-ats-api
        ports:
            - "8081:80"
        expose:
            - "80"
        networks:
            - desafio-network
        restart: always
        depends_on:
            - mysql-db-ats
            - mongo-db-ats
        volumes:
            - ./appsettings.json:/app/appsettings.Production.json

    desafio-ats-front:
        image: ${REGISTRY}/desafio-ats-front:${TAG}
        container_name: desafio-ats-front
        expose:
            - "80"
        networks:
            - desafio-network
        restart: always

    nginx-ingress:
        image: nginx:1.19.6-alpine
        container_name: nginx-ingress
        expose:
            - "80"
        ports:
            - "80:80"
        networks:
            - desafio-network
        restart: always
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
