// <auto-generated />
using System;
using DesafioATS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioATS.Data.Migrations
{
    [DbContext(typeof(DesafioATSContext))]
    [Migration("20221211142421_DesafioInitial")]
    partial class DesafioInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("DesafioATS.Domain.Candidaturas.Candidatura", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CandidatoEmail")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CandidatoId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<string>("CandidatoNome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CandidatoTelefone")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("RecrutadorId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<string>("TituloVaga")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("VagaId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Candidaturas");
                });

            modelBuilder.Entity("DesafioATS.Domain.Curriculos.Curriculo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CandidatoId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<string>("CandidatoNome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Resumo")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Curriculos");
                });

            modelBuilder.Entity("DesafioATS.Domain.Curriculos.ExperienciaProfissional", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CurriculoId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Resumo")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CurriculoId");

                    b.ToTable("ExperienciaProfissional");
                });

            modelBuilder.Entity("DesafioATS.Domain.Curriculos.FormacaoAcademica", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CurriculoId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Instituicao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CurriculoId");

                    b.ToTable("FormacaoAcademica");
                });

            modelBuilder.Entity("DesafioATS.Domain.Vagas.Vaga", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Atividades")
                        .HasColumnType("text");

                    b.Property<string>("RecrutadorId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Remuneracao")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("RequitosDesejaveis")
                        .HasColumnType("text");

                    b.Property<string>("RequitosTecnicos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoContrato")
                        .HasColumnType("int");

                    b.Property<int>("TipoJornada")
                        .HasColumnType("int");

                    b.Property<int>("TipoRemuneracao")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("DesafioATS.Domain.Curriculos.ExperienciaProfissional", b =>
                {
                    b.HasOne("DesafioATS.Domain.Curriculos.Curriculo", "Curriculo")
                        .WithMany("Experiencias")
                        .HasForeignKey("CurriculoId")
                        .HasConstraintName("FK_ExperienciaProfissional_Curriculo_CurriculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculo");
                });

            modelBuilder.Entity("DesafioATS.Domain.Curriculos.FormacaoAcademica", b =>
                {
                    b.HasOne("DesafioATS.Domain.Curriculos.Curriculo", "Curriculo")
                        .WithMany("Formacoes")
                        .HasForeignKey("CurriculoId")
                        .HasConstraintName("FK_FormacaoAcademica_Curriculo_CurriculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculo");
                });

            modelBuilder.Entity("DesafioATS.Domain.Curriculos.Curriculo", b =>
                {
                    b.Navigation("Experiencias");

                    b.Navigation("Formacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
